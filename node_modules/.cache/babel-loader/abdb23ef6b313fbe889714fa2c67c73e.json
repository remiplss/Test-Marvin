{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\remip\\\\Documents\\\\GitHub\\\\REST-Countries-API-with-color-theme-switcher-1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\remip\\\\Documents\\\\GitHub\\\\REST-Countries-API-with-color-theme-switcher-1\\\\src\\\\components\\\\main.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    background: \", \";\\n    transition: all 0.3s ease-in-out;\\n    color: \", \";\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    transition: 0.3s transform;\\n    will-change: transform;\\n    &:hover {\\n        transform: translateY(-10px);\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { MdPeople, MdLocationCity, MdLocationOn } from 'react-icons/md';\nimport CountryLoader from './loader';\nconst COUNTRIES = styled.div(_templateObject());\nconst COUNTRIESTEXT = styled.div(_templateObject2(), props => props.theme.themes.header[props.theme.currTheme].background, props => props.theme.themes.header[props.theme.currTheme].foreground);\nexport default class main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countriesList: [],\n      isLoading: false,\n      searchQuery: '',\n      filterRegion: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getCountriesData();\n  }\n\n  async getCountriesData() {\n    try {\n      const response = await axios.get('https://restcountries.com/v2/all');\n      console.log(response);\n      this.setState({\n        countriesList: response.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async resultatRecherche(value) {\n    this.setState({\n      searchQuery: value\n    });\n    if (value === '') this.getCountriesData();\n    if (value.length < 3) return;\n\n    try {\n      const response = await axios.get(\"https://restcountries.com/v2/name/\".concat(value));\n      console.log(response);\n      this.setState({\n        countriesList: response.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async filtreRegion(region) {\n    this.setState({\n      filterRegion: region\n    });\n    if (region === '') this.getCountriesData();\n\n    try {\n      const response = await axios.get(\"https://restcountries.com/v3/region/\".concat(region));\n      console.log(response);\n      this.setState({\n        countriesList: response.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          countriesList = _this$state.countriesList,\n          searchQuery = _this$state.searchQuery;\n    return React.createElement(\"main\", {\n      className: \"mt-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"countries-header flex justify-between px-6 my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-1/3 h-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"relative text-gray-600\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"rechercher\",\n      name: \"rechercher\",\n      placeholder: \"Rechercher\",\n      value: searchQuery,\n      onChange: e => {\n        this.resultatRecherche(e.target.value);\n      },\n      className: \"bg-gray-700 text-white placeholder-gray-100  h-12 px-5 pl-10 rounded w-full text-lg focus:outline-none focus:shadow-md focus:border-gray-600 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"pointer-events-none absolute left-0 top-0 mt-4 ml-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      className: \"h-4 w-4 fill-current\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n      version: \"1.1\",\n      id: \"Capa_1\",\n      x: \"0px\",\n      y: \"0px\",\n      viewBox: \"0 0 56.966 56.966\",\n      style: {\n        enableBackground: 'new 0 0 56.966 56.966'\n      },\n      xmlSpace: \"preserve\",\n      width: \"512px\",\n      height: \"512px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"inline-block relative w-64\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: e => {\n        this.filtreRegion(e.target.value);\n      },\n      className: \"block appearance-none w-full bg-gray-700 text-white border border-gray-900 hover:border-gray-500 px-4 py-4 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Filtrer par region\"), React.createElement(\"option\", {\n      value: \"Africa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Afrique\"), React.createElement(\"option\", {\n      value: \"Americas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Amerique\"), React.createElement(\"option\", {\n      value: \"Asia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Asie\"), React.createElement(\"option\", {\n      value: \"Europe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Europe\"), React.createElement(\"option\", {\n      value: \"Oceania\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Oceanie\")), React.createElement(\"div\", {\n      className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      className: \"fill-current h-4 w-4\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 20 20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))))), !isLoading && countriesList && countriesList.length !== 0 ? React.createElement(\"div\", {\n      className: \"countries-container flex flex-1 flex-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, countriesList.map((countries, index) => {\n      return React.createElement(COUNTRIES, {\n        key: index,\n        className: \"countries w-full md:w-1/2 xl:w-1/4 p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/country/\".concat(countries.name),\n          state: {\n            countries: countries\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(COUNTRIESTEXT, {\n        theme: this.props.theme,\n        className: \"bg-gray-700 rounded-lg shadow-lg hover:shadow-2xl \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: countries.flag,\n        className: \"w-full object-cover h-40 rounded-t-lg\",\n        alt: countries.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"countries-content p-3 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-2xl mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, countries.name), React.createElement(\"p\", {\n        className: \"flex items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(MdPeople, {\n        className: \"mr-2\",\n        title: \"Population\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), countries.population), React.createElement(\"p\", {\n        className: \"flex items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(MdLocationOn, {\n        className: \"mr-2\",\n        title: \"Region\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), countries.region), React.createElement(\"p\", {\n        className: \"flex items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(MdLocationCity, {\n        className: \"mr-2\",\n        title: \"Capital\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), countries.capital)))));\n    })) : React.createElement(\"div\", {\n      className: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(CountryLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/remip/Documents/GitHub/REST-Countries-API-with-color-theme-switcher-1/src/components/main.js"],"names":["React","Component","axios","Link","styled","MdPeople","MdLocationCity","MdLocationOn","CountryLoader","COUNTRIES","div","COUNTRIESTEXT","props","theme","themes","header","currTheme","background","foreground","main","constructor","state","countriesList","isLoading","searchQuery","filterRegion","componentDidMount","getCountriesData","response","get","console","log","setState","data","error","resultatRecherche","value","length","filtreRegion","region","render","e","target","enableBackground","map","countries","index","pathname","name","flag","population","capital"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { MdPeople, MdLocationCity, MdLocationOn } from 'react-icons/md';\r\nimport CountryLoader from './loader';\r\n\r\nconst COUNTRIES = styled.div`\r\n    transition: 0.3s transform;\r\n    will-change: transform;\r\n    &:hover {\r\n        transform: translateY(-10px);\r\n    }\r\n`;\r\n\r\nconst COUNTRIESTEXT = styled.div`\r\n    background: ${props => props.theme.themes.header[props.theme.currTheme].background};\r\n    transition: all 0.3s ease-in-out;\r\n    color: ${props => props.theme.themes.header[props.theme.currTheme].foreground};\r\n`;\r\n\r\nexport default class main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            countriesList: [],\r\n            isLoading: false,\r\n            searchQuery: '',\r\n            filterRegion: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCountriesData();\r\n    }\r\n\r\n    async getCountriesData() {\r\n        try {\r\n            const response = await axios.get('https://restcountries.com/v2/all');\r\n            console.log(response);\r\n            this.setState({\r\n                countriesList: response.data,\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async resultatRecherche(value) {\r\n        this.setState({ searchQuery: value });\r\n        if (value === '') this.getCountriesData();\r\n\r\n        if (value.length < 3) return;\r\n\r\n        try {\r\n            const response = await axios.get(`https://restcountries.com/v2/name/${value}`);\r\n            console.log(response);\r\n            this.setState({\r\n                countriesList: response.data,\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async filtreRegion(region) {\r\n        this.setState({ filterRegion: region });\r\n\r\n        if (region === '') this.getCountriesData();\r\n\r\n        try {\r\n            const response = await axios.get(`https://restcountries.com/v3/region/${region}`);\r\n            console.log(response);\r\n            this.setState({\r\n                countriesList: response.data,\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, countriesList, searchQuery } = this.state;\r\n\r\n        return (\r\n            <main className=\"mt-20\">\r\n                <div className=\"container mx-auto\">\r\n                    <div className=\"countries-header flex justify-between px-6 my-5\">\r\n                        <div className=\"w-1/3 h-full\">\r\n                            <div className=\"relative text-gray-600\">\r\n                                <input\r\n                                    type=\"rechercher\"\r\n                                    name=\"rechercher\"\r\n                                    placeholder=\"Rechercher\"\r\n                                    value={searchQuery}\r\n                                    onChange={e => {\r\n                                        this.resultatRecherche(e.target.value);\r\n                                    }}\r\n                                    className=\"bg-gray-700 text-white placeholder-gray-100  h-12 px-5 pl-10 rounded w-full text-lg focus:outline-none focus:shadow-md focus:border-gray-600 \"\r\n                                />\r\n                                <button type=\"submit\" className=\"pointer-events-none absolute left-0 top-0 mt-4 ml-4\">\r\n                                    <svg\r\n                                        className=\"h-4 w-4 fill-current\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                        version=\"1.1\"\r\n                                        id=\"Capa_1\"\r\n                                        x=\"0px\"\r\n                                        y=\"0px\"\r\n                                        viewBox=\"0 0 56.966 56.966\"\r\n                                        style={{ enableBackground: 'new 0 0 56.966 56.966' }}\r\n                                        xmlSpace=\"preserve\"\r\n                                        width=\"512px\"\r\n                                        height=\"512px\"\r\n                                    >\r\n                                        <path d=\"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z\" />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inline-block relative w-64\">\r\n                            <select\r\n                                onChange={e => {\r\n                                    this.filtreRegion(e.target.value);\r\n                                }}\r\n                                className=\"block appearance-none w-full bg-gray-700 text-white border border-gray-900 hover:border-gray-500 px-4 py-4 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                            >\r\n                                <option value=\"\">Filtrer par region</option>\r\n                                <option value=\"Africa\">Afrique</option>\r\n                                <option value=\"Americas\">Amerique</option>\r\n                                <option value=\"Asia\">Asie</option>\r\n                                <option value=\"Europe\">Europe</option>\r\n                                <option value=\"Oceania\">Oceanie</option>\r\n                            </select>\r\n                            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-200\">\r\n                                <svg\r\n                                    className=\"fill-current h-4 w-4\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    viewBox=\"0 0 20 20\"\r\n                                >\r\n                                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {!isLoading && countriesList && countriesList.length !== 0 ? (\r\n                        <div className=\"countries-container flex flex-1 flex-wrap\">\r\n                            {countriesList.map((countries, index) => {\r\n                                return (\r\n                                    <COUNTRIES key={index} className=\"countries w-full md:w-1/2 xl:w-1/4 p-5\">\r\n                                        <Link\r\n                                            to={{\r\n                                                pathname: `/country/${countries.name}`,\r\n                                                state: { countries: countries },\r\n                                            }}\r\n                                        >\r\n                                            <COUNTRIESTEXT\r\n                                                theme={this.props.theme}\r\n                                                className=\"bg-gray-700 rounded-lg shadow-lg hover:shadow-2xl \"\r\n                                            >\r\n                                                <img\r\n                                                    src={countries.flag}\r\n                                                    className=\"w-full object-cover h-40 rounded-t-lg\"\r\n                                                    alt={countries.name}\r\n                                                />\r\n                                                <div className=\"countries-content p-3 \">\r\n                                                    <h2 className=\"text-2xl mb-2\">{countries.name}</h2>\r\n                                                    <p className=\"flex items-center\">\r\n                                                        <MdPeople className=\"mr-2\" title=\"Population\" />\r\n                                                        {countries.population}\r\n                                                    </p>\r\n                                                    <p className=\"flex items-center\">\r\n                                                        <MdLocationOn className=\"mr-2\" title=\"Region\" />\r\n                                                        {countries.region}\r\n                                                    </p>\r\n                                                    <p className=\"flex items-center\">\r\n                                                        <MdLocationCity className=\"mr-2\" title=\"Capital\" />\r\n                                                        {countries.capital}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </COUNTRIESTEXT>\r\n                                        </Link>\r\n                                    </COUNTRIES>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"block\">\r\n                            <CountryLoader />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}